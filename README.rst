ledgeR
------

.. image:: https://travis-ci.org/trevorld/ledgeR.png?branch=master
    :target: https://travis-ci.org/trevorld/ledgeR
    :alt: Build Status

.. image:: https://img.shields.io/codecov/c/github/trevorld/ledgeR/master.svg
    :target: https://codecov.io/github/trevorld/ledgeR?branch=master
    :alt: Coverage Status

``ledgeR`` is an R package to import data from plaintext accounting software like Ledger, HLedger, and Beancount into an R data frame for convenient analysis and plotting.

Right now it supports reading in the register from ``ledger``, ``hledger`` files and ``beancount`` files.  

Install
=======

Dependencies
    #. `R <https://cran.r-project.org/>`_ and the R packages ``dplyr``, ``rio``, and ``rlang``
    #. `ledger <https://www.ledger-cli.org/>`_ (if importing ledger files)
    #. `hledger <http://hledger.org/>`_ (if importing hledger files or beancount files)
    #. `beancount <http://furius.ca/beancount/>`_ (if importing beancount files)

To run the unit tests you will also need the suggested R package ``testthat``.

To install the development version of the ``ledgeR`` package use the ``install_github`` function from the ``devtools`` package in R::
    
    if(!require("devtools")) { install.packages("devtools") }
    devtools::install_github("trevorld/ledgeR")

Arguments
=========

The main function is ``register`` which has the following arguments:

file
    Filename for an hledger or beancount file.  
include_cleared
    Include cleared transactions (default ``TRUE``).
include_pending
    Include pending transactions (default ``TRUE``).
include_unmarked
    Include unmarked transactions (default ``TRUE``).  
    Effectively ignored for beancount files 
    (which don't support unmarked transactions).
convert_to_cost
    Convert amounts to their cost (default ``FALSE``).
convert_to_market_value
    Convert amounts to their market value (default ``FALSE``).
tags 
    Character vector of tags to filter.  
    For beancount tags include the initial ``#`` and for beancount links include the initial ``^``.
    If ``NULL`` (the default) don't filter based on any tags.

This package also exports S3 methods so one can use ``rio::import`` to read in a register.

Examples
========

Example reading in the example beancount file generated by ``bean-example``::

    > library("ledgeR")
    > example_beancount_file <- tempfile(fileext = ".beancount")
    > system(paste("bean-example -o", example_beancount_file), ignore.stderr=TRUE)
    > df <- register(example_beancount_file)
    > head(df)
            date   payee                           description
    1 2015-01-01    <NA>  Opening Balance for checking account
    2 2015-01-01    <NA>  Opening Balance for checking account
    3 2015-01-01 BayBook                               Payroll
    4 2015-01-01 BayBook                               Payroll
    5 2015-01-01 BayBook                               Payroll
    6 2015-01-01 BayBook                               Payroll
                              account   amount commodity 
    1         Assets:US:BofA:Checking  3579.30       USD
    2         Equity:Opening-Balances -3579.30       USD
    3         Assets:US:BofA:Checking  1350.60       USD
    4         Assets:US:Vanguard:Cash  1200.00       USD
    5        Income:US:BayBook:Salary -4615.38       USD
    6 Income:US:BayBook:GroupTermLife   -24.32       USD

One can also use ``rio::import`` to read in the register::

    > df2 <- rio::import(example_beancount_file)
    > all.equal(df, df2)
    [1] TRUE

``rio::convert`` is convenient to converting plaintext accounting files to other file formats such as a csv file::


    $ bean-example -o example.beancount
    $ Rscript --default-packages=ledgeR,rio -e 'convert("example.beancount", "example.csv")'
    $ csvlook example.csv | head
    |-------------+---------------------------+--------------------------------------------------+--------------------------------------------+----------+------------|
    |  date       | payee                     | description                                      | account                                    | amount   | commodity  |
    |-------------+---------------------------+--------------------------------------------------+--------------------------------------------+----------+------------|
    |  2016-01-01 |                           | Opening Balance for checking account             | Assets:US:BofA:Checking                    | 3706.42  | USD        |
    |  2016-01-01 |                           | Opening Balance for checking account             | Equity:Opening-Balances                    | -3706.42 | USD        |
    |  2016-01-01 |                           | Allowed contributions for one year               | Income:US:Federal:PreTax401k               | -18000   | IRAUSD     |
    |  2016-01-01 |                           | Allowed contributions for one year               | Assets:US:Federal:PreTax401k               | 18000    | IRAUSD     |
    |  2016-01-02 | Rose Flower               | Eating out after work                            | Liabilities:US:Chase:Slate                 | -58.14   | USD        |
    |  2016-01-02 | Rose Flower               | Eating out after work                            | Expenses:Food:Restaurant                   | 58.14    | USD        |
    |  2016-01-04 | BANK FEES                 | Monthly bank fee                                 | Assets:US:BofA:Checking                    | -4       | USD        |


An example on filtering on any of the tags starting with ``#trip`` in the example beancount file::

    > df <- register(example_beancount_file, tags="#trip")
    > head(df)
            date payee description                    account amount commodity
    1 2016-02-06    NA          NA Liabilities:US:Chase:Slate -31.14       USD
    2 2016-02-06    NA          NA   Expenses:Food:Restaurant  31.14       USD
    3 2016-02-06    NA          NA Liabilities:US:Chase:Slate  -7.18       USD
    4 2016-02-06    NA          NA       Expenses:Food:Coffee   7.18       USD
    5 2016-02-07    NA          NA Liabilities:US:Chase:Slate -32.74       USD
    6 2016-02-07    NA          NA   Expenses:Food:Restaurant  32.74       USD
    > suppressPackageStartupMessages(library("dplyr"))
    > filter(df, grepl("Expenses", account)) %>% group_by(account) %>% summarise(trip_total = sum(amount))
    # A tibble: 2 x 2
                       account trip_total
                         <chr>      <dbl>
    1     Expenses:Food:Coffee      31.61
    2 Expenses:Food:Restaurant     242.15

Note there is currently in a bug in ``bean-report`` that leads us to lose the payee and description for any transactions that uses a ``#tag`` or ``^link`` tag.

.. Chart of trip expenses by year

.. Tax computation cookbook

.. Chart of net worth over time

.. > expand.grid(year=2007:2009, month=sprintf("%02d", 1:12))
